use mydatabase
switched to db mydatabase
mydatabase> db.Users.insertMany([
...   { u_id: 1, name: "Alice", city: "New York" },
...   { u_id: 2, name: "Bob", city: "Los Angeles" },
...   { u_id: 3, name: "Charlie", city: "Chicago" }
... ])
...
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('67ee07b97e5a18e69e6b140b'),
    '1': ObjectId('67ee07b97e5a18e69e6b140c'),
    '2': ObjectId('67ee07b97e5a18e69e6b140d')
  }
}
mydatabase> db.Products.insertMany([
...   { p_id: 101, name: "Laptop", price: 1000, category: "Electronics", stock: 50 },
...   { p_id: 102, name: "Phone", price: 500, category: "Electronics", stock: 100 },
...   { p_id: 103, name: "Shoes", price: 80, category: "Fashion", stock: 200 }
... ])
...
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('67ee07d27e5a18e69e6b140e'),
    '1': ObjectId('67ee07d27e5a18e69e6b140f'),
    '2': ObjectId('67ee07d27e5a18e69e6b1410')
  }
}
mydatabase> db.Orders.insertMany([
...   { o_id: 1001, u_id: 1, p_id: 101, qty: 1, status: "Shipped" },
...   { o_id: 1002, u_id: 2, p_id: 103, qty: 2, status: "Pending" }
... ])
...
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('67ee07dd7e5a18e69e6b1411'),
    '1': ObjectId('67ee07dd7e5a18e69e6b1412')
  }
}
mydatabase> db.Payments.insertMany([
...   { pay_id: 5001, o_id: 1001, amount: 1000, status: "Completed", method: "Credit Card" },
...   { pay_id: 5002, o_id: 1002, amount: 160, status: "Pending", method: "PayPal" }
... ])
...
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('67ee07e97e5a18e69e6b1413'),
    '1': ObjectId('67ee07e97e5a18e69e6b1414')
  }
}
mydatabase> db.Users.find().pretty()
... db.Products.find().pretty()
... db.Orders.find().pretty()
... db.Payments.find().pretty()
...
[
  {
    _id: ObjectId('67ee07e97e5a18e69e6b1413'),
    pay_id: 5001,
    o_id: 1001,
    amount: 1000,
    status: 'Completed',
    method: 'Credit Card'
  },
  {
    _id: ObjectId('67ee07e97e5a18e69e6b1414'),
    pay_id: 5002,
    o_id: 1002,
    amount: 160,
    status: 'Pending',
    method: 'PayPal'
  }
]










1]
db.Orders.aggregate([
    {
        $lookup: {
            from: "Users",      
            localField: "u_id",  
            foreignField: "u_id",   
            as: "user_info"    
        }
    },
{
   $unwind: "$user_info"  
    },
    {
        $project: {
            u_id: 1,
            "user_info.name": 1,
            p_id: 1,
            qty: 1,
            status: 1
        }
    }
])

output:
[
  {
    _id: ObjectId('67ee07dd7e5a18e69e6b1411'),
    u_id: 1,
    p_id: 101,
    qty: 1,
    status: 'Delivered',
    user_info: { name: 'Alice' }
  }
]


2]
db.Orders.aggregate([
    {
        $group: {
            _id: "$u_id",  
            totalOrders: { $sum: 1 }  
        }
    }
])

output:
[ { _id: 2, totalOrders: 1 }, { _id: 1, totalOrders: 1 } ]



3]
db.Orders.aggregate([
    { $sort: { qty: -1 } }  
])

output:
[
  {
    _id: ObjectId('67ee07dd7e5a18e69e6b1412'),
    o_id: 1002,
    u_id: 2,
    p_id: 103,
    qty: 2,
    status: 'Pending'
  },
  {
    _id: ObjectId('67ee07dd7e5a18e69e6b1411'),
    o_id: 1001,
    u_id: 1,
    p_id: 101,
    qty: 1,
    status: 'Delivered'
  }
]


4]
db.Orders.aggregate([
    {
        $lookup: {
            from: "Products",
            localField: "p_id",
            foreignField: "p_id",
            as: "product_details"
        }
    },
    { $unwind: "$product_details" },
    {
        $group: {
            _id: "$p_id",
            totalRevenue: { $sum: { $multiply: ["$qty", "$product_details.price"] } }
        }
    },
    { $sort: { totalRevenue: -1 } }  
])

output:
[ { _id: 101, totalRevenue: 1000 }, { _id: 103, totalRevenue: 160 } ]


5]
db.Orders.aggregate([
    { $match: { status: "Delivered" } }, 
    {
        $group: {
            _id: null,
            totalSales: { $sum: "$qty" }
        }
    }
])

output:
[ { _id: null, totalSales: 1 } ]

































